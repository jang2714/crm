<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.code.main.customer.mapper.CustomerMapper">

    <select id="getTotalCustomerCount" parameterType="java.util.Map" resultType="int">
        select count(*) as cnt
        from tbl_customer
    </select>

    <select id="getAllCustomer" resultType="kr.code.main.customer.domain.CustomerNamecardVO" parameterType="java.util.Map">

    select cust_uid, cust_name, cust_addr, addr_post, cust_email, phone_number, company_name, pos_code, dept_code
    from tbl_customer
    ORDER BY create_date ASC
    LIMIT #{current}, #{count}

    </select>

    <select id="getCustomersByTag" resultType="kr.code.main.customer.domain.CustomerNamecardVO" parameterType="java.util.Map">

        select c.cust_uid, c.cust_name, c.cust_addr, c.addr_post, c.cust_email, c.phone_number, c.company_name, c.pos_code, c.dept_code
        FROM tbl_customer c
                 INNER JOIN tbl_customer_tag ct ON c.cust_uid = ct.customer_id
                 INNER JOIN tbl_tags t ON t.tag_id = ct.tag_id
        WHERE t.tag_title = #{tagTitle}

    </select>

    <select id="findCustomerBySearchKey" resultType="kr.code.main.customer.domain.CustomerNamecardVO" parameterType="java.util.Map">

        select c.cust_uid, c.cust_name, c.cust_addr, c.addr_post, c.cust_email, c.phone_number, c.company_name, c.pos_code, c.dept_code
        FROM tbl_customer c
        <![CDATA[
        WHERE c.cust_name LIKE CONCAT('%', #{keyword}, '%') or
              c.cust_addr LIKE CONCAT('%', #{keyword}, '%') or
              c.cust_email LIKE CONCAT('%', #{keyword}, '%') or
              c.phone_number LIKE CONCAT('%', #{keyword}, '%') or
              c.company_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY create_date ASC
        LIMIT #{current}, #{count}
        ]]>

    </select>

    <select id="countCustomerBySearchKey" parameterType="java.util.Map" resultType="int">

        select count(*)
        FROM tbl_customer c
        <![CDATA[
        WHERE c.cust_name LIKE CONCAT('%', #{keyword}, '%') or
            c.cust_addr LIKE CONCAT('%', #{keyword}, '%') or
            c.cust_email LIKE CONCAT('%', #{keyword}, '%') or
            c.phone_number LIKE CONCAT('%', #{keyword}, '%') or
            c.company_name LIKE CONCAT('%', #{keyword}, '%')
        ]]>

    </select>

    <insert id="createCustomer" parameterType="kr.code.main.customer.domain.CustomerVO">

    insert into tbl_customer
            (cust_uid, cust_name, cust_gender, cust_birth, cust_addr, addr_post, cust_email, phone_number, company_name, pos_code, dept_code, attached_cnt)
        values(#{customerUid}, #{customerName}, #{customerGender}, #{customerBirth}, #{address}, #{postcode}, #{customerEmail}, #{phoneNumber}, #{companyName}, #{posCode}, #{deptCode}, #{attachedCnt})


    </insert>

    <resultMap id="customerMap" type="kr.code.main.customer.domain.CustomerTagVO">
        <id property="customerUid" column="cust_uid"/>
        <result property="customerName" column="cust_name"/>
        <collection property="tags" ofType="kr.code.main.common.tag.domain.Tag">
            <id property="tagId" column="tag_id"/>
            <result property="tagTitle" column="tag_title"/>
        </collection>
    </resultMap>

    <select id="getCustomerTagsById" resultMap="customerMap">
        SELECT c.cust_uid, c.cust_name, t.tag_id, t.tag_title
        FROM tbl_customer c
                 LEFT OUTER JOIN tbl_customer_tag ct ON c.cust_uid = ct.customer_id
                 LEFT OUTER JOIN tbl_tags t ON ct.tag_id = t.tag_id
        WHERE c.cust_uid = #{customerId}
    </select>

    <insert id="insertCustomerAndTag" parameterType="java.util.Map">
        INSERT INTO tbl_customer_tag (customer_id, tag_id)
        VALUES (#{customerId}, #{tagId})
    </insert>

    <update id="updateCustomer" parameterType="kr.code.main.customer.domain.CustomerVO">

        UPDATE tbl_customer
        <set>
            <if test="customerBirth neq null and customerBirth neq ''">
                cust_birth = #{customerBirth},
            </if>
            <if test="address neq null and address neq ''">
                cust_addr = #{address},
            </if>
            <if test="postcode neq null and postcode neq ''">
                addr_post = #{postcode},
            </if>
            <if test="customerEmail neq null and customerEmail neq ''">
                cust_email = #{customerEmail},
            </if>
            <if test="phoneNumber neq null and phoneNumber neq ''">
                phone_number = #{phoneNumber},
            </if>
            <if test="companyName neq null and companyName neq ''">
                company_name = #{companyName},
            </if>
            <if test="posCode neq null and posCode neq ''">
                pos_code = #{posCode},
            </if>
            <if test="deptCode neq null and deptCode neq ''">
                dept_code = #{deptCode},
            </if>
            <if test="attachedCnt neq null and attachedCnt neq ''">
                attached_cnt = #{attachedCnt},
            </if>
        </set>
        WHERE cust_uid = #{customerUid}

    </update>

</mapper>